name: Terraform check
on:
  workflow_call:
    inputs:
      default_env:
        type: string
        required: false
        default: qa
        description: Default env name
      runner_tags:
        type: string
        required: false
        default: '["self-hosted"]'
        description: GitHub runner tags
    secrets:
      GITHUB:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  validate:
    name: "Validate"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform

    steps:
    -
      name: Configure git override
      run: |
        git config --global url."https://oauth2:${{ secrets.GITHUB }}@github.com".insteadOf ssh://git@github.com
    -
      name: Checkout Project
      uses: actions/checkout@v3
    -
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -
      name: Terraform init
      run: make ENV=${{ inputs.default_env }} terraform/init
    -
      name: Terraform validate
      run: make ENV=${{ inputs.default_env }} terraform/validate

  plan:
    name: "Plan"
    needs: [validate]
    runs-on: ubuntu-latest
    concurrency: terraform-${{ matrix.env }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB }}
    strategy:
      fail-fast: false
      matrix:
          env:
          - qa
          - dev
          - prod
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform
    steps:
    -
      name: Configure git override
      run: |
        git config --global url."https://oauth2:${{ secrets.GITHUB }}@github.com".insteadOf ssh://git@github.com
    -
      name: Checkout Project
      uses: actions/checkout@v3
    -
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -
      name: Terraform init
      run: make ENV=${{ matrix.env }} terraform/init
    -
      name: Terraform plan
      run: make ENV=${{ matrix.env }} TF_CMD_ARGS='-lock=false' terraform/plan