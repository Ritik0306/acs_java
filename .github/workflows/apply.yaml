name: Terraform apply
on:
  workflow_call:
    inputs:
      env:
        description: 'qa | load | prod'
        default: 'qa'
        required: false
        type: string
      ref:
        description: Git Ref (Default to workflow branch)
        required: false
        type: string
        default: ''
      runner_tags:
        type: string
        required: false
        default: '["self-hosted"]'
        description: GitHub runner tags
    secrets:
      GITHUB:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  ref:
    name: Ref
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.version.outputs.ref }}
    steps:
    -
      id: version
      run: |
        echo "ref=${{ github.event.inputs.ref != '' && github.event.inputs.ref || github.ref }}" >> $GITHUB_OUTPUT

  plan:
    needs: [ref]
    name: "Plan (${{ inputs.env }})"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform
    concurrency: terraform-${{ inputs.env }}
    env:
      GITHUB: ${{ secrets.GITHUB }}
    steps:
    -
      name: Checkout Project
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.ref.outputs.ref }}
    -
      name: Configure git override
      run: |
        git config --global url."https://oauth2:${{ secrets.GITHUB }}@github.com".insteadOf ssh://git@github.com
    -
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -
      name: Terraform init
      run: make ENV=${{ inputs.env }} terraform/init
    -
      name: Terraform plan
      run: make ENV=${{ inputs.env }} TF_CMD_ARGS='-out=terraform.plan' terraform/plan
      env:
        GITHUB: ${{ secrets.GITHUB }}
    -
      name: Save terraform plan
      uses: actions/upload-artifact@v3
      with:
        name: terraform.plan
        path: infra/terraform/terraform.plan

  apply:
    runs-on: ubuntu-latest
    needs: [ref, plan]
    name: "Apply (${{ inputs.env }})"
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform
    environment:
      name: terraform-${{ inputs.env }}
    steps:
    -
      name: Checkout Project
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.ref.outputs.ref }}
    -
      name: Configure git override
      run: |
        git config --global url."https://oauth2:${{ secrets.GITHUB }}@github.com".insteadOf ssh://git@github.com
    -
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -
      name: Restore terraform plan
      uses: actions/download-artifact@v2
      with:
        name: terraform.plan
        path: infra/terraform
    -
      name: Terraform init
      run: make ENV=${{ inputs.env }} terraform/init
    -
      name: Terraform apply
      run: make ENV=${{ inputs.env }} TF_CMD_ARGS='-auto-approve terraform.plan' terraform/apply
      env:
        GITHUB: ${{ secrets.GITHUB }}